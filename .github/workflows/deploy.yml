name: Deploy
on:
  push:
    branches: [ sandbox, qa ]
    tags: v[0-9]+.[0-9]+.[0-9]+
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      - name: set env
        id: set-envs
        run: |
          if [ $GITHUB_REF_NAME = 'sandbox' ] || [ $GITHUB_REF_NAME = 'qa' ]; then
            PROFILE=$GITHUB_REF_NAME
            TAG_NAME=$GITHUB_REF_NAME-$(date +'%Y%m%dT%H%M%S%Z')
          else
            PROFILE=prod
            TAG_NAME=$GITHUB_REF_NAME
          fi
          
          TARGET_PATH=
          REF_BRANCH=$PROFILE
          ECR_URI=

          echo "TARGET_PATH: $TARGET_PATH"
          echo "PROFILE: $PROFILE"
          echo "TAG_NAME: $TAG_NAME"
          echo "REF_BRANCH: $REF_BRANCH"
          echo "ECR_URI: $ECR_URI"
          echo "ECR_URI: $ECR_URI"

          echo "::set-output name=TARGET_PATH::$(echo $TARGET_PATH)"
          echo "::set-output name=PROFILE::$(echo $PROFILE)"
          echo "::set-output name=TAG_NAME::$(echo $TAG_NAME)"
          echo "::set-output name=REF_BRANCH::$(echo $REF_BRANCH)"
          echo "::set-output name=ECR_URI::$(echo $ECR_URI)"

      - name: Set up JDK 21
        uses: actions/setup-java@main
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@main
        with:
          gradle-version: wrapper
          arguments: assemble --no-daemon -Dspring.profiles.active=${{ steps.set-envs.outputs.PROFILE }}  -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@main

      - name: docker build and push
        run: |
          ECR_URI=${{ steps.set-envs.outputs.ECR_URI }}
          TAG_NAME=${{ steps.set-envs.outputs.TAG_NAME }}

          docker build -t $ECR_URI:$TAG_NAME .
          docker push $ECR_URI:$TAG_NAME


      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@main
        with:
          token: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
          repository:
          event-type: edit-kustomize
          client-payload: '{
            "dockerImg":"${{steps.set-envs.outputs.ECR_URI}}:${{steps.set-envs.outputs.TAG_NAME}}",
            "refBranch":"${{ steps.set-envs.outputs.REF_BRANCH }}",
            "tagName":"${{ steps.set-envs.outputs.TAG_NAME }}",
            "targetPath":"${{ steps.set-envs.outputs.TARGET_PATH }}"
          }'
